services:
  kafka:
    image: "apache/kafka:3.8.0"
    environment:
      KAFKA_NODE_ID: 1
      CLUSTER_ID: '5L6g3nShT-eMCtK--X86sw'
      # KRaft
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@localhost:29093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'SSL-INTERNAL'
      # Listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "SSL:SSL,CONTROLLER:PLAINTEXT,SSL-INTERNAL:SSL"
      KAFKA_LISTENERS: "SSL://:9092,CONTROLLER://:29093,SSL-INTERNAL://:19093"
      KAFKA_ADVERTISED_LISTENERS: "SSL://kafka:9092,SSL-INTERNAL://kafka:19093"
      KAFKA_SSL_KEYSTORE_FILENAME: "kafka.keystore.jks"
      KAFKA_SSL_KEY_CREDENTIALS: "credentials"
      KAFKA_SSL_KEYSTORE_CREDENTIALS: "credentials"
      KAFKA_SSL_TRUSTSTORE_FILENAME: "kafka.truststore.jks"
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: "credentials"
      KAFKA_SSL_CLIENT_AUTH: 'required'
      # It's important to create the tx topic ourselves, because it needs to use
      # LogAppendTime timestamps
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    volumes:
    - "./kafka.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro"
    - "./kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro"
    - "./credentials:/etc/kafka/secrets/credentials:ro"
    - "kafka-data:/var/lib/kafka/data"
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-topic-creator-main:
    image: "apache/kafka:3.7.0"
    command: "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 
      --command-config /etc/kafka/kafka-init.conf --create --if-not-exists 
      --topic blaze-tx-main --partitions 1 --replication-factor 1 
      --config message.timestamp.type=LogAppendTime --config retention.ms=-1"
    volumes:
    - "./kafka-init.conf:/etc/kafka/kafka-init.conf:ro"
    - "./kafka-topic-creator.keystore.jks:/etc/kafka/secrets/kafka-topic-creator.keystore.jks:ro"
    - "./kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro"
    depends_on:
      kafka:
        condition: service_healthy

  kafka-topic-creator-admin:
    image: "apache/kafka:3.7.0"
    command: "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 
      --command-config /etc/kafka/kafka-init.conf --create --if-not-exists 
      --topic blaze-tx-admin --partitions 1 --replication-factor 1 
      --config message.timestamp.type=LogAppendTime --config retention.ms=-1"
    volumes:
    - "./kafka-init.conf:/etc/kafka/kafka-init.conf:ro"
    - "./kafka-topic-creator.keystore.jks:/etc/kafka/secrets/kafka-topic-creator.keystore.jks:ro"
    - "./kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro"
    depends_on:
      kafka:
        condition: service_healthy

  cassandra-1:
    image: "cassandra:4.1.5"
    volumes:
    - "cassandra-1-data:/var/lib/cassandra"
    environment:
      CASSANDRA_SEEDS: "cassandra-1,cassandra-2"
      MAX_HEAP_SIZE: "1536M"
      HEAP_NEWSIZE: "200M"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      start_period: 45s
      interval: 5s
      timeout: 10s
      retries: 10

  cassandra-2:
    image: "cassandra:4.1.5"
    volumes:
    - "cassandra-2-data:/var/lib/cassandra"
    environment:
      CASSANDRA_SEEDS: "cassandra-1,cassandra-2"
      MAX_HEAP_SIZE: "1536M"
      HEAP_NEWSIZE: "200M"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      start_period: 45s
      interval: 5s
      timeout: 10s
      retries: 10

  cassandra-init-data:
    image: "cassandra:4.1.4"
    command: "cqlsh -f /scripts/cassandra-init.cql"
    environment:
      CQLSH_HOST: "cassandra-1"
    volumes:
    - "./cassandra-init.cql:/scripts/cassandra-init.cql:ro"
    depends_on:
      cassandra-1:
        condition: service_healthy
      cassandra-2:
        condition: service_healthy

  blaze-1:
    image: "blaze:latest"
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx2g"
      STORAGE: "distributed"
      DB_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      DB_KAFKA_MAX_REQUEST_SIZE: "10485760"
      DB_KAFKA_SECURITY_PROTOCOL: "SSL"
      DB_KAFKA_SSL_TRUSTSTORE_LOCATION: "/app/kafka.truststore.jks"
      DB_KAFKA_SSL_TRUSTSTORE_PASSWORD: "password"
      DB_KAFKA_SSL_KEYSTORE_LOCATION: "/app/blaze.keystore.jks"
      DB_KAFKA_SSL_KEYSTORE_PASSWORD: "password"
      DB_KAFKA_SSL_KEY_PASSWORD: "password"
      DB_CASSANDRA_CONTACT_POINTS: "cassandra-1:9042,cassandra-2:9042"
      DB_CASSANDRA_REQUEST_TIMEOUT: "60000"
      DB_CASSANDRA_MAX_CONCURRENT_REQUESTS: "128"
      DB_BLOCK_CACHE_SIZE: "128"
      DB_RESOURCE_CACHE_SIZE: "100000"
      DB_RESOURCE_INDEXER_THREADS: "8"
    ports:
    - "8081:8081"
    volumes:
    - "./blaze.keystore.jks:/app/blaze.keystore.jks:ro"
    - "./kafka.truststore.jks:/app/kafka.truststore.jks:ro"
    - "blaze-1-data:/app/data"
    depends_on:
    - kafka-topic-creator-main
    - kafka-topic-creator-admin
    - cassandra-init-data

  blaze-2:
    image: "blaze:latest"
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx2g"
      STORAGE: "distributed"
      DB_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      DB_KAFKA_MAX_REQUEST_SIZE: "10485760"
      DB_KAFKA_SECURITY_PROTOCOL: "SSL"
      DB_KAFKA_SSL_TRUSTSTORE_LOCATION: "/app/kafka.truststore.jks"
      DB_KAFKA_SSL_TRUSTSTORE_PASSWORD: "password"
      DB_KAFKA_SSL_KEYSTORE_LOCATION: "/app/blaze.keystore.jks"
      DB_KAFKA_SSL_KEYSTORE_PASSWORD: "password"
      DB_KAFKA_SSL_KEY_PASSWORD: "password"
      DB_CASSANDRA_CONTACT_POINTS: "cassandra-1:9042,cassandra-2:9042"
      DB_CASSANDRA_REQUEST_TIMEOUT: "60000"
      DB_CASSANDRA_MAX_CONCURRENT_REQUESTS: "128"
      DB_BLOCK_CACHE_SIZE: "128"
      DB_RESOURCE_CACHE_SIZE: "100000"
      DB_RESOURCE_INDEXER_THREADS: "8"
    ports:
    - "8082:8081"
    volumes:
    - "./blaze.keystore.jks:/app/blaze.keystore.jks:ro"
    - "./kafka.truststore.jks:/app/kafka.truststore.jks:ro"
    - "blaze-2-data:/app/data"
    depends_on:
    - kafka-topic-creator-main
    - kafka-topic-creator-admin
    - cassandra-init-data

  ingress:
    image: "haproxy:2.8@sha256:d533c21b446c45e47dc5b89933df1e256ec09976dc5e83a4c1bea209c2baeeaa"
    ports:
    - "8080:8080"
    volumes:
    - "./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro"
    depends_on:
    - blaze-1
    - blaze-2

volumes:
  kafka-data:
  cassandra-1-data:
  cassandra-2-data:
  blaze-1-data:
  blaze-2-data:
